{"ast":null,"code":"var _jsxFileName = \"/Users/marnaud/Desktop/tetris/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Tail from './Tail';\nimport './App.css'; // import Footer from './Footer'\n// import AddTodo from '../containers/AddTodo'\n// import VisibleTodoList from '../containers/VisibleTodoList'\n// import '../style.css'\n// const App = () => (\n//   <div>\n//     <AddTodo />\n//     <VisibleTodoList />\n//     <Footer />\n//   </div>\n// )\n// export default App\n\nconst COLORS = [\"red\", \"blue\", \"green\", \"yellow\"];\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tails: this.generateForm()\n    };\n  }\n\n  generateForm() {\n    const result = [];\n    const size = 10 + 200;\n\n    while (result.length < size) {\n      result.push(COLORS[getRandomInt(5)]);\n    } // setTimeout(() => this.setState({ tails: this.generateForm() }), 750)\n\n\n    return result;\n  }\n\n  moveDown() {\n    var n = this.tails.length - 1;\n\n    while (n > 9) {\n      tails[n] = tails[n - 10];\n      n--;\n    }\n  }\n\n  render() {\n    const tails = this.state.tails;\n    return React.createElement(\"div\", {\n      className: \"area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, tails.map((color, index) => React.createElement(Tail, {\n      index: index,\n      color: color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marnaud/Desktop/tetris/src/components/App.js"],"names":["React","Component","Tail","COLORS","getRandomInt","max","Math","floor","random","App","state","tails","generateForm","result","size","length","push","moveDown","n","render","map","color","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,QAAzB,CAAf;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,MAAMI,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBS,KADwB,GAChB;AACNC,MAAAA,KAAK,EAAE,KAAKC,YAAL;AADD,KADgB;AAAA;;AAK1BA,EAAAA,YAAY,GAAG;AACb,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAG,KAAK,GAAlB;;AACA,WAAOD,MAAM,CAACE,MAAP,GAAgBD,IAAvB,EACA;AACED,MAAAA,MAAM,CAACG,IAAP,CAAYb,MAAM,CAACC,YAAY,CAAC,CAAD,CAAb,CAAlB;AACD,KANY,CAOb;;;AACA,WAAOS,MAAP;AACD;;AAEDI,EAAAA,QAAQ,GAAG;AACT,QAAIC,CAAC,GAAG,KAAKP,KAAL,CAAWI,MAAX,GAAoB,CAA5B;;AACA,WAAOG,CAAC,GAAG,CAAX,EACA;AACEP,MAAAA,KAAK,CAACO,CAAD,CAAL,GAAWP,KAAK,CAACO,CAAC,GAAG,EAAL,CAAhB;AACAA,MAAAA,CAAC;AACF;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCR,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACS,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KACT,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,KAAK,EAAED,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAUD;;AArCyB;;AAwC5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Tail from './Tail'\n\nimport './App.css'\n\n// import Footer from './Footer'\n// import AddTodo from '../containers/AddTodo'\n// import VisibleTodoList from '../containers/VisibleTodoList'\n// import '../style.css'\n\n// const App = () => (\n//   <div>\n//     <AddTodo />\n//     <VisibleTodoList />\n//     <Footer />\n//   </div>\n// )\n// export default App\n\nconst COLORS = [\"red\", \"blue\", \"green\", \"yellow\"]\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nclass App extends Component {\n    state = {\n      tails: this.generateForm(),\n  }\n\n  generateForm() {\n    const result = []\n    const size = 10 + 200\n    while (result.length < size)\n    {\n      result.push(COLORS[getRandomInt(5)])\n    }\n    // setTimeout(() => this.setState({ tails: this.generateForm() }), 750)\n    return result\n  }\n\n  moveDown() {\n    var n = this.tails.length - 1\n    while (n > 9)\n    {\n      tails[n] = tails[n - 10]\n      n--\n    }\n  }\n\n  render() {\n    const { tails } = this.state\n    return (\n      <div className=\"area\">\n        {tails.map((color, index) => (\n          <Tail\n            index={index}\n            color={color}\n            />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}